/**
 * @file static_string_size.h
 * @brief Заголовочный файл для макроса вычисления длины статической строки.
 *
 * Этот файл содержит определение макроса `se_static_string_size`,
 * который вычисляет длину статической строки (без учета завершающего нуля).
 *
 * Макрос использует `se_static_array_size` для получения полного размера массива
 * и вычитает 1, чтобы исключить завершающий нулевой символ.
 */

#ifndef SE_STATIC_STRING_SIZE_H
#define SE_STATIC_STRING_SIZE_H

#include "static_array_size.h"

/**
 * @def se_static_string_size
 * @brief Вычисляет длину статической строки.
 *
 * Этот макрос возвращает длину статической строки, не включая завершающий
 * нулевой символ (`\0`). Он основан на макросе `se_static_array_size`,
 * который вычисляет полный размер массива, после чего из результата вычитается 1.
 *
 * @param x Статическая строка (массив символов), длину которой нужно вычислить.
 * @return Длина строки без учета завершающего нуля.
 *
 * @note Макрос предназначен только для работы со статическими строками.
 *       Использование с динамическими указателями или некорректными типами
 *       может привести к неопределенному поведению.
 * @see se_static_array_size
 *
 * Пример использования:
 * @code
 * char str[] = "Hello";
 * constexpr auto len = se_static_string_size(str); // len == 5
 * @endcode
 */
#define se_static_string_size(x) (se_static_array_size(x) - 1)

#endif // SE_STATIC_STRING_SIZE_H